#include <iostream>
#include <string>
using namespace std;

bool IsLeapYear(short Year)
{   
    return ( (Year%100 != 0 && Year%4==0 ) || (Year%400==0) );
    // if year is divisible by 4 AND not divisible by 100
    // OR if year is divisible by 400
    // then it is a leap year
}
int NumberofDays(short mon,short Year)
{
    if(mon>12 || mon<1)
    return 0;
    
    int NumberofDays[13]={0,31,29,31,30,31,30,31,31,30,31,30,31};
    
    return (mon==2)? (IsLeapYear(Year)?29:28) :NumberofDays[mon];
}

short DayOfWeekOrder(short Day, short Month, short Year)
{ short a, y, m; 
    a = (14 - Month) / 12;
    y = Year - a;    
    m = Month + (12 * a) - 2;
    // Gregorian:
    //0:sun, 1:Mon, 2:Tue...etc
return (Day + y + (y / 4) - (y / 100) + (y / 400) + ((31 * m) / 12)) % 7; 
    
}

string DayShortName(int Day)
{
    string arr[7]={"Sun","Mon","Tue","Wed","Thu","Fri","Sat"};
    return arr[Day];
}
short ReadYear()
{   short year;
    cout<<"Enter The Year?\n";
    cin>>year;
    return year;
}
short ReadMon()
{   short Mon;
    cout<<"\nEnter The Mon\n";
    cin>>Mon;
    return Mon;
}
short ReadDay()
{   short Day;
    cout<<"\nEnter The Day?\n";
    cin>>Day;
    return Day;
}


int main() {
    
    short Year=ReadYear();
    short Mon=ReadMon();
    short Day=ReadDay();
    
    short DayofWeek =DayOfWeekOrder(Day,Mon,Year);
    
    cout<<"\nData       :"<<Day<<"/"<<Mon<<"/"<<Year;
    cout<<"\nDay Order  :"<<DayofWeek;
    cout<<"\nDay Name   :"<<DayShortName(DayofWeek);
    
    
    
    
    return 0;
}