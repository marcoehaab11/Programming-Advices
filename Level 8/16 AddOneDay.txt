#include <iostream>
#include <string>
using namespace std;

struct strDate
{
    short Year;
    short Month;
    short Day;
};

bool IsLeapYear(short Year)
{   
    return ( (Year%100 != 0 && Year%4==0 ) || (Year%400==0) );
    // if year is divisible by 4 AND not divisible by 100
    // OR if year is divisible by 400
    // then it is a leap year
}
int NumberofDaysOfMonth(short mon,short Year)
{
    if(mon>12 || mon<1)
    return 0;
    
    int NumberofDays[13]={0,31,29,31,30,31,30,31,31,30,31,30,31};
    
    return (mon==2)? (IsLeapYear(Year)?29:28) :NumberofDays[mon];
}




strDate IncreaseByOneDay(strDate OldDate)
{   strDate Date=OldDate;

    if(Date.Day >= NumberofDaysOfMonth(OldDate.Month,OldDate.Year))
    {
        Date.Month++;
        Date.Day=1;
    }
    else {
        Date.Day++;
    }
    if(Date.Month>12)
    {
        Date.Month=1;
        Date.Year++;
    }
  
    return Date;
}


strDate ReadFullDate()
{
    strDate Date;
    cout<<"Enter Year ? ";
    cin>>Date.Year;
    cout<<"Enter Month ? ";
    cin>>Date.Month;
    cout<<"Enter Day ? ";
    cin>>Date.Day;
    return Date;
}

int main() {
    
    strDate Date1 = ReadFullDate();
    strDate NewDate=IncreaseByOneDay(Date1);
    cout<<"\n"<<NewDate.Day<<"/"<<NewDate.Month<<"/"<<NewDate.Year;
    return 0;
}