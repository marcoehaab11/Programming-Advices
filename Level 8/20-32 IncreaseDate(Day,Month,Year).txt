#include <iostream>
using namespace std;

struct strDate
{
    short Year;
    short Month;
    short Day;
};

bool isLeapYear(short Year)
{
    return (Year%4==0 && Year%100!=0) || (Year%400==0);
}
short NumberOfDaysInMonth(short Month,short Year )
{
    if(Month<1||Month>12)
    return 0;
    
    int days[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };
    return (Month == 2) ? (isLeapYear(Year) ? 29 : 28) : days[Month - 1]; 
}
bool IsLastDayInMonth(strDate Date) 
{ 
    return (Date.Day == NumberOfDaysInMonth(Date.Month, Date.Year));
} 
bool IsLastMonthInYear(short Month) 
{ 
    return (Month == 12);
} 



strDate IncreaseDateByOneDay(strDate Date)
{
    if(IsLastDayInMonth(Date))
    {
        if(IsLastMonthInYear(Date.Month))
        {
            Date.Month=1;
            Date.Day=1;
            Date.Year++;
        }
        else 
        {
            Date.Day=1;
            Date.Month++;
        }
    }
    else 
    {
        Date.Day++;
    }
    
    return Date;    
}

strDate IncreaseDateByOneWeek(strDate Date)
{
    for(int i=1;i<=7;i++)
    {
        Date =IncreaseDateByOneDay(Date);
    }
    return Date;
}
strDate IncreaseDateByXWeek(short  Weeks,strDate Date)
{
    for(int i=1;i<=Weeks;i++)
    {
        Date=IncreaseDateByOneWeek(Date);
    }
    return Date;
}
strDate IncreaseDateByXDays(short  Days,strDate Date)
{
    for(int i=1;i<=Days;i++)
    {
        Date=IncreaseDateByOneDay(Date);
    }
    return Date;
}
strDate IncreaseDateByOneMonth(strDate Date)
{
    if(Date.Month==12)
    {
        Date.Month=1;
        Date.Year++;
    }
    else
    {
        Date.Month++;
    }

    short NumberOfDaysInCurrentMonth=NumberOfDaysInMonth(Date.Month,Date.Year);
    if(Date.Day>NumberOfDaysInCurrentMonth)
    {
        Date.Day=NumberOfDaysInCurrentMonth;
    }
    return Date;
}

strDate IncreaseDateByXMonth(short Months,strDate Date)
{
    for(int i=1;i<=Months;i++)
    {
        Date=IncreaseDateByOneMonth(Date);
    }
    return Date;
}
strDate IncreaseDateByOneYear(strDate Date)
{
    Date.Year++;
    return Date;
}
strDate IncreaseDateByXYear(short Years,strDate Date)
{
    for(int i =1;i<=Years;i++)
    {
        Date=IncreaseDateByOneYear(Date);
    }
    return Date;
}
strDate IncreaseDateByXYearsFaster(short Years ,strDate Date)
{
    Date.Year+=Years;
    return Date;
}
short ReadDay()
{ short Day;
cout << "\nPlease enter a Day? ";
cin >> Day;
return Day; } 
short ReadMonth()
{ short Month;
cout << "Please enter a Month? ";
cin >> Month; return Month;
} short ReadYear()
{ short Year; 
cout << "Please enter a Year? ";    
cin >> Year; return Year; } 
strDate ReadFullDate() 
{ strDate Date;     
Date.Day = ReadDay();
Date.Month = ReadMonth();
Date.Year = ReadYear(); 
return Date; } 


int main() {

    strDate Date1 = ReadFullDate();
    cout << "\nDate After: \n"; 


  Date1 = IncreaseDateByOneDay(Date1); 
  cout << "\n01-Adding one day is: "<< Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
  Date1 = IncreaseDateByXDays(10, Date1);
  cout << "\n02-Adding 10 days is: "<< Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
  Date1 = IncreaseDateByOneWeek(Date1); 
  cout << "\n03-Adding one week is: "  << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
  Date1 = IncreaseDateByXWeek(10, Date1); 
  cout << "\n04-Adding 10 weeks is: "<< Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
  Date1 = IncreaseDateByOneMonth(Date1);
  cout << "\n05-Adding one month is: "
  << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
  Date1 = IncreaseDateByXMonth(5, Date1);
  cout << "\n06-Adding 5 months is: "
  << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
  Date1 = IncreaseDateByOneYear(Date1);
  cout << "\n07-Adding one year is: "<< Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
  Date1 = IncreaseDateByXYear(10, Date1);
  cout << "\n08-Adding 10 Years is: "<< Date1.Day << "/" << Date1.Month << "/" << Date1.Year;
  Date1 = IncreaseDateByXYearsFaster(10, Date1);
  cout << "\n09-Adding 10 Years (faster) is: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

    return 0;
}